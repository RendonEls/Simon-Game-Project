{"version":3,"sources":["../js/main.js"],"names":["divColorArray","document","querySelectorAll","startGame","getElementById","restartGame","playerSelection","currentLevel","clickCount","randomColorPattern","restartListener","location","reload","playGame","makeRandomColor","setTimeout","iterateRandomColors","i","console","log","length","randomValue","Math","floor","random","push","id","randomNumber","delay","currentColor","addColorTimer","removeColorTimer","color","addColor","removeColor","classList","add","remove","playerClickInput","event","target","checkPlayerSelection","checkWinSelectionLength","alert","addEventListener","forEach"],"mappings":";AAAA,IAAMA,EAAgBC,SAASC,iBAAiB,UAC1CC,EAAYF,SAASG,eAAe,eACpCC,EAAcJ,SAASG,eAAe,iBAExCE,EAAkB,GAClBC,EAAe,EACfC,EAAa,EACbC,EAAqB,GAKzB,SAASC,IACPC,SAASC,SAGX,SAASC,IACPC,IACAC,WAAWC,EAAqB,KAGlC,SAASF,IACHP,GAAiB,IAAjBA,EAGGU,IAFLC,QAAQC,IAAI,eACZV,EAAqB,GAChBQ,EAAI,EAAGA,EAAIjB,EAAcoB,OAAQH,IAAK,CACrCI,IAAAA,EAAcC,KAAKC,MAAMD,KAAKE,SAAWxB,EAAcoB,QAC3DX,EAAmBgB,KAAKzB,EAAcqB,GAAaK,QAEhD,CACLR,QAAQC,IAAI,aACRQ,IAAAA,EAAeL,KAAKC,MAAMD,KAAKE,SAAWxB,EAAcoB,QAC5DX,EAAmBgB,KAAKzB,EAAc2B,GAAcD,IAE/CjB,OAAAA,EAGT,SAASO,IACHY,IAAAA,EAAQ,IACPX,IAAAA,EAAI,EAAGA,EAAIR,EAAmBW,OAAQH,IAAK,CACxCY,IAAAA,EAAepB,EAAmBQ,GACxCa,EAAcD,EAAcD,GAC5BG,EAAiBF,EAAcD,GAC/BA,GAAS,KAIb,SAASE,EAAcE,EAAOJ,GACNb,WAAW,WAC/BkB,EAASD,IACRJ,GAGL,SAASG,EAAiBC,EAAOJ,GACNb,WAAW,WAClCmB,EAAYF,IACXJ,EAAQ,KAGb,SAASK,EAASD,GACA/B,SAASG,eAAe4B,GAChCG,UAAUC,IAAI,SAGxB,SAASF,EAAYF,GACdf,IAAAA,EAAI,EAAGA,EAAIjB,EAAcoB,OAAQH,IAChCe,IAAUhC,EAAciB,GAAGS,KAC7B1B,EAAciB,GAAGkB,UAAUE,OAAO,SAClCnB,QAAQC,IAAInB,EAAciB,GAAGS,KAOnC,SAASY,EAAiBC,GACxBD,EAAmBC,EAAMC,OAAOd,GAChCpB,EAAgBmB,KAAKa,GACrBpB,QAAQC,IAAIb,GACZmC,IAGF,SAASA,IACHnC,EAAgBE,KAAgBC,EAAmBD,IACrDA,GAAc,EACdkC,KAEAC,MAAM,aAKV,SAASD,IACHlC,IAAeC,EAAmBW,SACpCF,QAAQC,IAAI,0BAEZZ,IACAW,QAAQC,IAAIZ,GACZD,EAAkB,GAClBE,EAAa,EACbK,KA3FJV,EAAUyC,iBAAiB,QAAS/B,GACpCR,EAAYuC,iBAAiB,QAASlC,GA+DtCV,EAAc6C,QAAQ,SAAAb,GAASA,OAAAA,EAAMY,iBAAiB,QAASN,KA8B/DpB,QAAQC,IAAIZ","file":"main.6fe74a41.map","sourceRoot":"../src/pug","sourcesContent":["const divColorArray = document.querySelectorAll(\".light\");\nconst startGame = document.getElementById(\"startButton\");\nconst restartGame = document.getElementById(\"restartButton\");\n\nlet playerSelection = [];\nlet currentLevel = 1;\nlet clickCount = 0;\nlet randomColorPattern = [];\n\nstartGame.addEventListener(\"click\", playGame);\nrestartGame.addEventListener(\"click\", restartListener);\n\nfunction restartListener() {\n  location.reload();\n}\n\nfunction playGame() {\n  makeRandomColor();\n  setTimeout(iterateRandomColors, 1000);\n}\n\nfunction makeRandomColor() {\n  if (currentLevel === 1) {\n    console.log(\"First level\");\n    randomColorPattern = [];\n    for (i = 0; i < divColorArray.length; i++) {\n      let randomValue = Math.floor(Math.random() * divColorArray.length);\n      randomColorPattern.push(divColorArray[randomValue].id);\n    }\n  } else {\n    console.log(\"else loop\");\n    let randomNumber = Math.floor(Math.random() * divColorArray.length);\n    randomColorPattern.push(divColorArray[randomNumber].id);\n  }\n  return randomColorPattern;\n}\n\nfunction iterateRandomColors() {\n  let delay = 1000;\n  for (i = 0; i < randomColorPattern.length; i++) {\n    const currentColor = randomColorPattern[i];\n    addColorTimer(currentColor, delay);\n    removeColorTimer(currentColor, delay);\n    delay += 1000;\n  }\n}\n\nfunction addColorTimer(color, delay) {\n  const addlightTimer = setTimeout(() => {\n    addColor(color);\n  }, delay);\n}\n\nfunction removeColorTimer(color, delay) {\n  const removeLightTimer = setTimeout(() => {\n    removeColor(color);\n  }, delay + 900);\n}\n\nfunction addColor(color) {\n  const element = document.getElementById(color);\n  element.classList.add(\"shade\");\n}\n\nfunction removeColor(color) {\n  for (i = 0; i < divColorArray.length; i++) {\n    if (color === divColorArray[i].id) {\n      divColorArray[i].classList.remove(\"shade\");\n      console.log(divColorArray[i].id);\n    }\n  }\n}\n\ndivColorArray.forEach(color => color.addEventListener(\"click\", playerClickInput));\n\nfunction playerClickInput(event) {\n  playerClickInput = event.target.id;\n  playerSelection.push(playerClickInput);\n  console.log(playerSelection);\n  checkPlayerSelection();\n}\n\nfunction checkPlayerSelection() {\n  if (playerSelection[clickCount] === randomColorPattern[clickCount]) {\n    clickCount += 1;\n    checkWinSelectionLength();\n  } else {\n    alert(\"try again\");\n    //function to add text to game board \n  }\n}\n\nfunction checkWinSelectionLength() {\n  if (clickCount === randomColorPattern.length) {\n    console.log(\"move to the next level\");\n    //call function that adds level to gameboard\n    currentLevel++;\n    console.log(currentLevel);\n    playerSelection = [];\n    clickCount = 0;\n    playGame();\n  }\n}\nconsole.log(currentLevel);\n\n\n//function that adds level to gameboard"]}